# -*- coding: utf-8 -*-
"""Gene_Expression_Data_Analyzer.ipynbb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R4xOLF4R7nJ_pxaStDbNBB-RNrcizqGH

# 🧬 Gene Expression Data Analyzer

This notebook analyzes a **CSV file of gene expression data**, filters for top expressed genes, and generates:

- 📊 Bar plots of top genes
- 🌡️ Heatmaps if multiple samples
- 📈 Summary statistics tables

---

✅ Tools: Pandas, Matplotlib, Seaborn
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

"""## 📂 Upload gene expression CSV file
Should have:
- First column as **Gene names**
- Other columns as expression values (FPKM, TPM, counts)

"""

uploaded = files.upload()
filename = list(uploaded.keys())[0]

df = pd.read_csv(filename)
df.head()

"""## 🔍 Dataset overview

"""

print(f"✅ Dataset contains {df.shape[0]} genes, {df.shape[1]} columns")
df.describe()

"""## 📊 Bar plot of top expressed genes

"""

# Assuming first column is Gene, second is expression
df.columns = ['Gene'] + list(df.columns[1:])

top_n = 15
df_sorted = df.sort_values(df.columns[1], ascending=False).head(top_n)

plt.figure(figsize=(12,6))
sns.barplot(x=df_sorted['Gene'], y=df_sorted[df.columns[1]], palette='viridis')
plt.title(f"Top {top_n} most expressed genes")
plt.xticks(rotation=45)
plt.ylabel(df.columns[1])
plt.show()

"""## 🌡️ Heatmap across samples (if multiple columns)

"""

if df.shape[1] > 2:
    df_heat = df.set_index('Gene').head(20)
    plt.figure(figsize=(10,8))
    sns.heatmap(df_heat, cmap='YlGnBu', annot=False)
    plt.title("Expression heatmap of top 20 genes across samples")
    plt.show()
else:
    print("⚠️ Only one expression column found, skipping heatmap.")

"""## 📋 Summary statistics of expression data

"""

df.set_index('Gene').describe()

"""## ✅ Conclusion

This notebook:
- Uploaded a CSV gene expression file
- Found and visualized the **top expressed genes**
- Created a **heatmap** across samples
- Summarized data with descriptive statistics

---
"""